parameters:
  - name: env
    type: string

  - name: tag
    type: string

steps:
  - task: UseNode@1
    inputs:
      version: $(NODE_VERSION)
    displayName: 'Set up Node.js'
  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: $(npm_config_cache)
    displayName: Cache npm
  - script: |
      npm ci
    displayName: 'Install dependencies'
  - script: |
      npx playwright install --with-deps
    displayName: 'Install Playwright browsers'
  - task: DownloadSecureFile@1
    name: pu_ux_secrets
    displayName: 'Download PU secrets'
    inputs:
      secureFile: 'pu_ux_secrets.yaml'
  - script: |
      npx cucumber-js --tags "@${{ parameters.tag }}" -f json:report/report.json; node ./report/xmlconverter.js
    displayName: 'Execute tests'
    env:
      PU_SECRET_PATH: $(pu_ux_secrets.secureFilePath)
      PU_TARGET_ENV: ${{ parameters.env }}
    continueOnError: true
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'report/junitreport.xml'
      searchFolder: $(Build.SourcesDirectory)
      failTaskOnFailedTests: true
    continueOnError: true
    condition: always()
    displayName: 'Publish Reports'
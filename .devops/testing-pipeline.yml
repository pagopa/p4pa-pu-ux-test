trigger:
  branches:
    include:
      - main
      
variables:
  NODE_VERSION: '22.2.0'
  npm_config_cache: $(Pipeline.Workspace)/.npm

pool:
  vmImage: 'ubuntu-22.04'

parameters:
  - name: env
    displayName: Target Environment
    type: string
    default: uat
    values:
      - dev
      - uat
  - name: tag
    displayName: Target tests tag (use unquoted "all" to run every un-skipped test)
    type: string
    default: 'all'
    values:
      - all
      - debt_positions
      - aca
      - gpd
      
stages:
  - stage: UX_tests
    dependsOn: [ ]
    jobs:
      - job: "${{ upper(parameters.env) }}_Run_all_ux_tests"
        condition: and(succeeded(), or(eq('${{ parameters.tag }}', ''), eq('${{ parameters.tag }}', 'all')))
        strategy:
          maxParallel: 2
          matrix:
            debt positions:
              current_tag: 'debt_positions'
        steps:
          - checkout: self
          - template: template\test-run.yml
            parameters:
              env: ${{ parameters.env }}
              tag: '$(current_tag)'
      - job: "${{ upper(parameters.env) }}_Run_ux_tests_by_tag"
        condition: and(succeeded(), and( not(eq('${{ parameters.tag }}', '')), not(eq('${{ parameters.tag }}', 'all'))))
        steps:
          - checkout: self
          - template: template\test-run.yml
            parameters:
              env: ${{ parameters.env }}
              tag: ${{ parameters.tag }}